// Code generated by ogen, DO NOT EDIT.

package otelbotapi

import (
	"fmt"
)

func (s *ErrorStatusCode) Error() string {
	return fmt.Sprintf("code %d: %+v", s.StatusCode, s.Response)
}

// Error occurred while processing request.
// Ref: #/components/schemas/Error
type Error struct {
	// Human-readable error message.
	ErrorMessage string     `json:"error_message"`
	TraceID      OptTraceID `json:"trace_id"`
	SpanID       OptSpanID  `json:"span_id"`
}

// GetErrorMessage returns the value of ErrorMessage.
func (s *Error) GetErrorMessage() string {
	return s.ErrorMessage
}

// GetTraceID returns the value of TraceID.
func (s *Error) GetTraceID() OptTraceID {
	return s.TraceID
}

// GetSpanID returns the value of SpanID.
func (s *Error) GetSpanID() OptSpanID {
	return s.SpanID
}

// SetErrorMessage sets the value of ErrorMessage.
func (s *Error) SetErrorMessage(val string) {
	s.ErrorMessage = val
}

// SetTraceID sets the value of TraceID.
func (s *Error) SetTraceID(val OptTraceID) {
	s.TraceID = val
}

// SetSpanID sets the value of SpanID.
func (s *Error) SetSpanID(val OptSpanID) {
	s.SpanID = val
}

// ErrorStatusCode wraps Error with StatusCode.
type ErrorStatusCode struct {
	StatusCode int
	Response   Error
}

// GetStatusCode returns the value of StatusCode.
func (s *ErrorStatusCode) GetStatusCode() int {
	return s.StatusCode
}

// GetResponse returns the value of Response.
func (s *ErrorStatusCode) GetResponse() Error {
	return s.Response
}

// SetStatusCode sets the value of StatusCode.
func (s *ErrorStatusCode) SetStatusCode(val int) {
	s.StatusCode = val
}

// SetResponse sets the value of Response.
func (s *ErrorStatusCode) SetResponse(val Error) {
	s.Response = val
}

type GetStatusOK struct {
	// Status.
	Status string `json:"status"`
}

// GetStatus returns the value of Status.
func (s *GetStatusOK) GetStatus() string {
	return s.Status
}

// SetStatus sets the value of Status.
func (s *GetStatusOK) SetStatus(val string) {
	s.Status = val
}

// NewOptSpanID returns new OptSpanID with value set to v.
func NewOptSpanID(v SpanID) OptSpanID {
	return OptSpanID{
		Value: v,
		Set:   true,
	}
}

// OptSpanID is optional SpanID.
type OptSpanID struct {
	Value SpanID
	Set   bool
}

// IsSet returns true if OptSpanID was set.
func (o OptSpanID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSpanID) Reset() {
	var v SpanID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSpanID) SetTo(v SpanID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSpanID) Get() (v SpanID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSpanID) Or(d SpanID) SpanID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTraceID returns new OptTraceID with value set to v.
func NewOptTraceID(v TraceID) OptTraceID {
	return OptTraceID{
		Value: v,
		Set:   true,
	}
}

// OptTraceID is optional TraceID.
type OptTraceID struct {
	Value TraceID
	Set   bool
}

// IsSet returns true if OptTraceID was set.
func (o OptTraceID) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTraceID) Reset() {
	var v TraceID
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTraceID) SetTo(v TraceID) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTraceID) Get() (v TraceID, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTraceID) Or(d TraceID) TraceID {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// PingNoContent is response for Ping operation.
type PingNoContent struct{}

type SpanID string

// SubmitReportCreated is response for SubmitReport operation.
type SubmitReportCreated struct{}

type SubmitReportReq struct {
	// Benchmark report type.
	Report string `json:"report"`
	// Measurement value.
	Measurement float64 `json:"measurement"`
}

// GetReport returns the value of Report.
func (s *SubmitReportReq) GetReport() string {
	return s.Report
}

// GetMeasurement returns the value of Measurement.
func (s *SubmitReportReq) GetMeasurement() float64 {
	return s.Measurement
}

// SetReport sets the value of Report.
func (s *SubmitReportReq) SetReport(val string) {
	s.Report = val
}

// SetMeasurement sets the value of Measurement.
func (s *SubmitReportReq) SetMeasurement(val float64) {
	s.Measurement = val
}

type TokenAuth struct {
	APIKey string
	Roles  []string
}

// GetAPIKey returns the value of APIKey.
func (s *TokenAuth) GetAPIKey() string {
	return s.APIKey
}

// GetRoles returns the value of Roles.
func (s *TokenAuth) GetRoles() []string {
	return s.Roles
}

// SetAPIKey sets the value of APIKey.
func (s *TokenAuth) SetAPIKey(val string) {
	s.APIKey = val
}

// SetRoles sets the value of Roles.
func (s *TokenAuth) SetRoles(val []string) {
	s.Roles = val
}

type TraceID string
