entries:
  android.os.api_level:
    brief: |
      Uniquely identifies the framework API revision offered by a version (`os.version`) of the android operating system. More information can be found [here](https://developer.android.com/guide/topics/manifest/uses-sdk-element#ApiLevels).
    column: String
    examples:
    - "33"
    - "32"
    name: android_os_api_level
    type: string
  android.state:
    brief: |
      This attribute represents the state the application has transitioned into at the occurrence of the event.
    column: Enum8(0 = 'created', 1 = 'background', 2 = 'foreground')
    enum:
    - created
    - background
    - foreground
    name: android_state
    type: string
  aws.ecs.cluster.arn:
    brief: |
      The ARN of an [ECS cluster](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/clusters.html).
    column: String
    examples:
    - arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster
    name: aws_ecs_cluster_arn
    type: string
  aws.ecs.container.arn:
    brief: |
      The Amazon Resource Name (ARN) of an [ECS container instance](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_instances.html).
    column: String
    examples:
    - arn:aws:ecs:us-west-1:123456789123:container/32624152-9086-4f0e-acae-1a75b14fe4d9
    name: aws_ecs_container_arn
    type: string
  aws.ecs.launchtype:
    brief: |
      The [launch type](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html) for an ECS task.
    column: Enum8(0 = 'ec2', 1 = 'fargate')
    enum:
    - ec2
    - fargate
    name: aws_ecs_launchtype
    type: string
  aws.ecs.task.arn:
    brief: |
      The ARN of an [ECS task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definitions.html).
    column: String
    examples:
    - arn:aws:ecs:us-west-1:123456789123:task/10838bed-421f-43ef-870a-f43feacbbb5b
    name: aws_ecs_task_arn
    type: string
  aws.ecs.task.family:
    brief: |
      The task definition family this task definition is a member of.
    column: String
    examples:
    - opentelemetry-family
    name: aws_ecs_task_family
    type: string
  aws.ecs.task.revision:
    brief: |
      The revision for this task definition.
    column: String
    examples:
    - "8"
    - "26"
    name: aws_ecs_task_revision
    type: string
  aws.eks.cluster.arn:
    brief: |
      The ARN of an EKS cluster.
    column: String
    examples:
    - arn:aws:ecs:us-west-2:123456789123:cluster/my-cluster
    name: aws_eks_cluster_arn
    type: string
  aws.lambda.invoked_arn:
    brief: |
      The full invoked ARN as provided on the `Context` passed to the function (`Lambda-Runtime-Invoked-Function-Arn` header on the `/runtime/invocation/next` applicable).
    column: String
    examples:
    - arn:aws:lambda:us-east-1:123456:function:myfunction:myalias
    name: aws_lambda_invoked_arn
    type: string
  aws.log.group.arns:
    brief: |
      The Amazon Resource Name(s) (ARN) of the AWS log group(s).
    column: Array(String)
    examples:
    - arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:*
    name: aws_log_group_arns
    type: string[]
  aws.log.group.names:
    brief: |
      The name(s) of the AWS log group(s) an application is writing to.
    column: Array(String)
    examples:
    - /aws/lambda/my-function
    - opentelemetry-service
    name: aws_log_group_names
    type: string[]
  aws.log.stream.arns:
    brief: |
      The ARN(s) of the AWS log stream(s).
    column: Array(String)
    examples:
    - arn:aws:logs:us-west-1:123456789012:log-group:/aws/my/group:log-stream:logs/main/10838bed-421f-43ef-870a-f43feacbbb5b
    name: aws_log_stream_arns
    type: string[]
  aws.log.stream.names:
    brief: |
      The name(s) of the AWS log stream(s) an application is writing to.
    column: Array(String)
    examples:
    - logs/main/10838bed-421f-43ef-870a-f43feacbbb5b
    name: aws_log_stream_names
    type: string[]
  browser.brands:
    brief: Array of brand name and version separated by a space
    column: Array(String)
    examples:
    - ' Not A;Brand 99'
    - Chromium 99
    - Chrome 99
    name: browser_brands
    type: string[]
  browser.language:
    brief: Preferred language of the user using the browser
    column: String
    examples:
    - en
    - en-US
    - fr
    - fr-FR
    name: browser_language
    type: string
  browser.mobile:
    brief: A boolean that is true if the browser is running on a mobile device
    column: Bool
    name: browser_mobile
    type: boolean
  browser.platform:
    brief: The platform on which the browser is running
    column: String
    examples:
    - Windows
    - macOS
    - Android
    name: browser_platform
    type: string
  client.address:
    brief: Client address - domain name if available without reverse DNS lookup; otherwise,
      IP address or Unix domain socket name.
    column: String
    examples:
    - client.example.com
    - 10.1.2.80
    - /tmp/my.sock
    name: client_address
    type: string
  client.port:
    brief: Client port number.
    column: UInt16
    examples:
    - 65123
    name: client_port
    type: int
  cloud.account.id:
    brief: |
      The cloud account ID the resource is assigned to.
    column: String
    examples:
    - "111111111111"
    - opentelemetry
    name: cloud_account_id
    type: string
  cloud.availability_zone:
    brief: |
      Cloud regions often have multiple, isolated locations known as zones to increase availability. Availability zone represents the zone where the resource is running.
    column: String
    examples:
    - us-east-1c
    name: cloud_availability_zone
    type: string
  cloud.platform:
    brief: |
      The cloud platform in use.
    column: String
    name: cloud_platform
    type: string
  cloud.provider:
    brief: |
      Name of the cloud provider.
    column: String
    name: cloud_provider
    type: string
  cloud.region:
    brief: |
      The geographical region the resource is running.
    column: String
    examples:
    - us-central1
    - us-east-1
    name: cloud_region
    type: string
  cloud.resource_id:
    brief: |
      Cloud provider-specific native identifier of the monitored cloud resource (e.g. an [ARN](https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html) on AWS, a [fully qualified resource ID](https://learn.microsoft.com/rest/api/resources/resources/get-by-id) on Azure, a [full resource name](https://cloud.google.com/apis/design/resource_names#full_resource_name) on GCP)
    column: String
    examples:
    - arn:aws:lambda:REGION:ACCOUNT_ID:function:my-function
    - //run.googleapis.com/projects/PROJECT_ID/locations/LOCATION_ID/services/SERVICE_ID
    - /subscriptions/<SUBSCIPTION_GUID>/resourceGroups/<RG>/providers/Microsoft.Web/sites/<FUNCAPP>/functions/<FUNC>
    name: cloud_resource_id
    type: string
  cloudevents.event_id:
    brief: |
      The [event_id](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#id) uniquely identifies the event.
    column: String
    examples:
    - 123e4567-e89b-12d3-a456-426614174000
    - "0001"
    name: cloudevents_event_id
    type: string
  cloudevents.event_source:
    brief: |
      The [source](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#source-1) identifies the context in which an event happened.
    column: String
    examples:
    - https://github.com/cloudevents
    - /cloudevents/spec/pull/123
    - my-service
    name: cloudevents_event_source
    type: string
  cloudevents.event_spec_version:
    brief: |
      The [version of the CloudEvents specification](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#specversion) which the event uses.
    column: String
    examples:
    - "1.0"
    name: cloudevents_event_spec_version
    type: string
  cloudevents.event_subject:
    brief: |
      The [subject](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#subject) of the event in the context of the event producer (identified by source).
    column: String
    examples:
    - mynewfile.jpg
    name: cloudevents_event_subject
    type: string
  cloudevents.event_type:
    brief: |
      The [event_type](https://github.com/cloudevents/spec/blob/v1.0.2/cloudevents/spec.md#type) contains a value describing the type of event related to the originating occurrence.
    column: String
    examples:
    - com.github.pull_request.opened
    - com.example.object.deleted.v2
    name: cloudevents_event_type
    type: string
  code.column:
    brief: |
      The column number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.
    column: Int64
    examples:
    - 16
    name: code_column
    type: int
  code.filepath:
    brief: |
      The source code file name that identifies the code unit as uniquely as possible (preferably an absolute file path).
    column: String
    examples:
    - /usr/local/MyApplication/content_root/app/index.php
    name: code_filepath
    type: string
  code.function:
    brief: |
      The method or function name, or equivalent (usually rightmost part of the code unit's name).
    column: String
    examples:
    - serveRequest
    name: code_function
    type: string
  code.lineno:
    brief: |
      The line number in `code.filepath` best representing the operation. It SHOULD point within the code unit named in `code.function`.
    column: Int64
    examples:
    - 42
    name: code_lineno
    type: int
  code.namespace:
    brief: |
      The "namespace" within which `code.function` is defined. Usually the qualified class or module name, such that `code.namespace` + some separator + `code.function` form a unique identifier for the code unit.
    column: String
    examples:
    - com.example.MyHttpService
    name: code_namespace
    type: string
  code.stacktrace:
    brief: |
      A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.
    column: String
    examples:
    - at com.example.GenerateTrace.methodB(GenerateTrace.java:13)\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\n
      at com.example.GenerateTrace.main(GenerateTrace.java:5)
    name: code_stacktrace
    type: string
  container.command:
    brief: |
      The command used to run the container (i.e. the command name).
    column: String
    examples:
    - otelcontribcol
    name: container_command
    type: string
  container.command_args:
    brief: |
      All the command arguments (including the command/executable itself) run by the container. [2]
    column: Array(String)
    examples:
    - otelcontribcol, --config, config.yaml
    name: container_command_args
    type: string[]
  container.command_line:
    brief: |
      The full command run by the container as a single string representing the full command. [2]
    column: String
    examples:
    - otelcontribcol --config config.yaml
    name: container_command_line
    type: string
  container.id:
    brief: |
      Container ID. Usually a UUID, as for example used to [identify Docker containers](https://docs.docker.com/engine/reference/run/#container-identification). The UUID might be abbreviated.
    column: String
    examples:
    - a3bf90e006b2
    name: container_id
    type: string
  container.image.id:
    brief: |
      Runtime specific image identifier. Usually a hash algorithm followed by a UUID.
    column: String
    examples:
    - sha256:19c92d0a00d1b66d897bceaa7319bee0dd38a10a851c60bcec9474aa3f01e50f
    name: container_image_id
    type: string
  container.image.name:
    brief: |
      Name of the image the container was built on.
    column: String
    examples:
    - gcr.io/opentelemetry/operator
    name: container_image_name
    type: string
  container.image.repo_digests:
    brief: |
      Repo digests of the container image as provided by the container runtime.
    column: Array(String)
    examples:
    - example@sha256:afcc7f1ac1b49db317a7196c902e61c6c3c4607d63599ee1a82d702d249a0ccb
    - internal.registry.example.com:5000/example@sha256:b69959407d21e8a062e0416bf13405bb2b71ed7a84dde4158ebafacfa06f5578
    name: container_image_repo_digests
    type: string[]
  container.image.tags:
    brief: |
      Container image tags. An example can be found in [Docker Image Inspect](https://docs.docker.com/engine/api/v1.43/#tag/Image/operation/ImageInspect). Should be only the `<tag>` section of the full name for example from `registry.example.com/my-org/my-image:<tag>`.
    column: Array(String)
    examples:
    - v1.27.1
    - 3.5.7-0
    name: container_image_tags
    type: string[]
  container.labels:
    brief: |
      Container labels, `<key>` being the label name, the value being the label value.
    column: String
    examples:
    - container.labels.app=nginx
    name: container_labels
    type: template[string]
  container.name:
    brief: |
      Container name used by container runtime.
    column: String
    examples:
    - opentelemetry-autoconf
    name: container_name
    type: string
  container.runtime:
    brief: |
      The container runtime managing this container.
    column: String
    examples:
    - docker
    - containerd
    - rkt
    name: container_runtime
    type: string
  db.cassandra.consistency_level:
    brief: |
      The consistency level of the query. Based on consistency values from [CQL](https://docs.datastax.com/en/cassandra-oss/3.0/cassandra/dml/dmlConfigConsistency.html).
    column: Enum8(0 = 'all', 1 = 'each_quorum', 2 = 'quorum', 3 = 'local_quorum',
      4 = 'one', 5 = 'two', 6 = 'three', 7 = 'local_one', 8 = 'any', 9 = 'serial',
      10 = 'local_serial')
    enum:
    - all
    - each_quorum
    - quorum
    - local_quorum
    - one
    - two
    - three
    - local_one
    - any
    - serial
    - local_serial
    name: db_cassandra_consistency_level
    type: string
  db.cassandra.coordinator.dc:
    brief: |
      The data center of the coordinating node for a query.
    column: String
    examples:
    - us-west-2
    name: db_cassandra_coordinator_dc
    type: string
  db.cassandra.coordinator.id:
    brief: |
      The ID of the coordinating node for a query.
    column: String
    examples:
    - be13faa2-8574-4d71-926d-27f16cf8a7af
    name: db_cassandra_coordinator_id
    type: string
  db.cassandra.idempotence:
    brief: |
      Whether or not the query is idempotent.
    column: Bool
    name: db_cassandra_idempotence
    type: boolean
  db.cassandra.page_size:
    brief: |
      The fetch size used for paging, i.e. how many rows will be returned at once.
    column: Int64
    examples:
    - 5000
    name: db_cassandra_page_size
    type: int
  db.cassandra.speculative_execution_count:
    brief: |
      The number of times a query was speculatively executed. Not set or `0` if the query was not executed speculatively.
    column: Int64
    examples:
    - 0
    - 2
    name: db_cassandra_speculative_execution_count
    type: int
  db.cassandra.table:
    brief: The name of the primary Cassandra table that the operation is acting upon,
      including the keyspace name (if applicable).
    column: String
    examples:
    - mytable
    name: db_cassandra_table
    type: string
  db.connection_string:
    brief: |
      The connection string used to connect to the database. It is recommended to remove embedded credentials.
    column: String
    examples:
    - Server=(localdb)\v11.0;Integrated Security=true;
    name: db_connection_string
    type: string
  db.cosmosdb.client_id:
    brief: Unique Cosmos client instance id.
    column: String
    examples:
    - 3ba4827d-4422-483f-b59f-85b74211c11d
    name: db_cosmosdb_client_id
    type: string
  db.cosmosdb.connection_mode:
    brief: Cosmos client connection mode.
    column: Enum8(0 = 'gateway', 1 = 'direct')
    enum:
    - gateway
    - direct
    name: db_cosmosdb_connection_mode
    type: string
  db.cosmosdb.container:
    brief: Cosmos DB container name.
    column: String
    examples:
    - anystring
    name: db_cosmosdb_container
    type: string
  db.cosmosdb.operation_type:
    brief: CosmosDB Operation Type.
    column: String
    name: db_cosmosdb_operation_type
    type: string
  db.cosmosdb.request_charge:
    brief: RU consumed for that operation
    column: Float64
    examples:
    - 46.18
    - 1
    name: db_cosmosdb_request_charge
    type: double
  db.cosmosdb.request_content_length:
    brief: Request payload size in bytes
    column: Int64
    name: db_cosmosdb_request_content_length
    type: int
  db.cosmosdb.status_code:
    brief: Cosmos DB status code.
    column: Int64
    examples:
    - 200
    - 201
    name: db_cosmosdb_status_code
    type: int
  db.cosmosdb.sub_status_code:
    brief: Cosmos DB sub status code.
    column: Int64
    examples:
    - 1000
    - 1002
    name: db_cosmosdb_sub_status_code
    type: int
  db.elasticsearch.cluster.name:
    brief: |
      Represents the identifier of an Elasticsearch cluster.
    column: String
    examples:
    - e9106fc68e3044f0b1475b04bf4ffd5f
    name: db_elasticsearch_cluster_name
    type: string
  db.elasticsearch.node.name:
    brief: |
      Represents the human-readable identifier of the node/instance to which a request was routed.
    column: String
    examples:
    - instance-0000000001
    name: db_elasticsearch_node_name
    type: string
  db.elasticsearch.path_parts:
    brief: |
      A dynamic value in the url path.
    column: String
    examples:
    - db.elasticsearch.path_parts.index=test-index
    - db.elasticsearch.path_parts.doc_id=123
    name: db_elasticsearch_path_parts
    type: template[string]
  db.jdbc.driver_classname:
    brief: |
      The fully-qualified class name of the [Java Database Connectivity (JDBC)](https://docs.oracle.com/javase/8/docs/technotes/guides/jdbc/) driver used to connect.
    column: String
    examples:
    - org.postgresql.Driver
    - com.microsoft.sqlserver.jdbc.SQLServerDriver
    name: db_jdbc_driver_classname
    type: string
  db.mongodb.collection:
    brief: |
      The MongoDB collection being accessed within the database stated in `db.name`.
    column: String
    examples:
    - customers
    - products
    name: db_mongodb_collection
    type: string
  db.mssql.instance_name:
    brief: |
      The Microsoft SQL Server [instance name](https://docs.microsoft.com/sql/connect/jdbc/building-the-connection-url?view=sql-server-ver15) connecting to. This name is used to determine the port of a named instance.
    column: String
    examples:
    - MSSQLSERVER
    name: db_mssql_instance_name
    type: string
  db.name:
    brief: |
      This attribute is used to report the name of the database being accessed. For commands that switch the database, this should be set to the target database (even if the command fails).
    column: String
    examples:
    - customers
    - main
    name: db_name
    type: string
  db.operation:
    brief: |
      The name of the operation being executed, e.g. the [MongoDB command name](https://docs.mongodb.com/manual/reference/command/#database-operations) such as `findAndModify`, or the SQL keyword.
    column: String
    examples:
    - findAndModify
    - HMSET
    - SELECT
    name: db_operation
    type: string
  db.redis.database_index:
    brief: |
      The index of the database being accessed as used in the [`SELECT` command](https://redis.io/commands/select), provided as an integer. To be used instead of the generic `db.name` attribute.
    column: Int64
    examples:
    - 0
    - 1
    - 15
    name: db_redis_database_index
    type: int
  db.sql.table:
    brief: The name of the primary table that the operation is acting upon, including
      the database name (if applicable).
    column: String
    examples:
    - public.users
    - customers
    name: db_sql_table
    type: string
  db.statement:
    brief: |
      The database statement being executed.
    column: String
    examples:
    - SELECT * FROM wuser_table
    - SET mykey "WuValue"
    name: db_statement
    type: string
  db.system:
    brief: An identifier for the database management system (DBMS) product being used.
      See below for a list of well-known identifiers.
    column: String
    name: db_system
    type: string
  db.user:
    brief: |
      Username for accessing the database.
    column: String
    examples:
    - readonly_user
    - reporting_user
    name: db_user
    type: string
  deployment.environment:
    brief: |
      Name of the [deployment environment](https://wikipedia.org/wiki/Deployment_environment) (aka deployment tier).
    column: String
    examples:
    - staging
    - production
    name: deployment_environment
    type: string
  destination.address:
    brief: Destination address - domain name if available without reverse DNS lookup;
      otherwise, IP address or Unix domain socket name.
    column: String
    examples:
    - destination.example.com
    - 10.1.2.80
    - /tmp/my.sock
    name: destination_address
    type: string
  destination.port:
    brief: Destination port number
    column: UInt16
    examples:
    - 3389
    - 2888
    name: destination_port
    type: int
  device.id:
    brief: |
      A unique identifier representing the device
    column: String
    examples:
    - 2ab2916d-a51f-4ac8-80ee-45ac31a28092
    name: device_id
    type: string
  device.manufacturer:
    brief: |
      The name of the device manufacturer
    column: String
    examples:
    - Apple
    - Samsung
    name: device_manufacturer
    type: string
  device.model.identifier:
    brief: |
      The model identifier for the device
    column: String
    examples:
    - iPhone3,4
    - SM-G920F
    name: device_model_identifier
    type: string
  device.model.name:
    brief: |
      The marketing name for the device model
    column: String
    examples:
    - iPhone 6s Plus
    - Samsung Galaxy S6
    name: device_model_name
    type: string
  disk.io.direction:
    brief: The disk IO operation direction.
    column: Enum8(0 = 'read', 1 = 'write')
    enum:
    - read
    - write
    name: disk_io_direction
    type: string
  enduser.id:
    brief: |
      Username or client_id extracted from the access token or [Authorization](https://tools.ietf.org/html/rfc7235#section-4.2) header in the inbound request from outside the system.
    column: String
    examples:
    - username
    name: enduser_id
    type: string
  enduser.role:
    brief: Actual/assumed role the client is making the request under extracted from
      token or application security context.
    column: String
    examples:
    - admin
    name: enduser_role
    type: string
  enduser.scope:
    brief: |
      Scopes or granted authorities the client currently possesses extracted from token or application security context. The value would come from the scope associated with an [OAuth 2.0 Access Token](https://tools.ietf.org/html/rfc6749#section-3.3) or an attribute value in a [SAML 2.0 Assertion](http://docs.oasis-open.org/security/saml/Post2.0/sstc-saml-tech-overview-2.0.html).
    column: String
    examples:
    - read:message, write:files
    name: enduser_scope
    type: string
  error.type:
    brief: |
      Describes a class of error the operation ended with.
    column: String
    examples:
    - timeout
    - java.net.UnknownHostException
    - server_certificate_invalid
    - "500"
    name: error_type
    type: string
  event.name:
    brief: |
      Identifies the class / type of event.
    column: String
    examples:
    - browser.mouse.click
    - device.app.lifecycle
    name: event_name
    type: string
  exception.escaped:
    brief: |
      SHOULD be set to true if the exception event is recorded at a point where it is known that the exception is escaping the scope of the span.
    column: Bool
    name: exception_escaped
    type: boolean
  exception.message:
    brief: The exception message.
    column: String
    examples:
    - Division by zero
    - Can't convert 'int' object to str implicitly
    name: exception_message
    type: string
  exception.stacktrace:
    brief: |
      A stacktrace as a string in the natural representation for the language runtime. The representation is to be determined and documented by each language SIG.
    column: String
    examples:
    - 'Exception in thread "main" java.lang.RuntimeException: Test exception\n at
      com.example.GenerateTrace.methodB(GenerateTrace.java:13)\n at com.example.GenerateTrace.methodA(GenerateTrace.java:9)\n
      at com.example.GenerateTrace.main(GenerateTrace.java:5)'
    name: exception_stacktrace
    type: string
  exception.type:
    brief: |
      The type of the exception (its fully-qualified class name, if applicable). The dynamic type of the exception should be preferred over the static type in languages that support it.
    column: String
    examples:
    - java.net.ConnectException
    - OSError
    name: exception_type
    type: string
  faas.coldstart:
    brief: |
      A boolean that is true if the serverless function is executed for the first time (aka cold-start).
    column: Bool
    name: faas_coldstart
    type: boolean
  faas.cron:
    brief: |
      A string containing the schedule period as [Cron Expression](https://docs.oracle.com/cd/E12058_01/doc/doc.1014/e12030/cron_expressions.htm).
    column: String
    examples:
    - 0/5 * * * ? *
    name: faas_cron
    type: string
  faas.document.collection:
    brief: |
      The name of the source on which the triggering operation was performed. For example, in Cloud Storage or S3 corresponds to the bucket name, and in Cosmos DB to the database name.
    column: String
    examples:
    - myBucketName
    - myDbName
    name: faas_document_collection
    type: string
  faas.document.name:
    brief: |
      The document name/table subjected to the operation. For example, in Cloud Storage or S3 is the name of the file, and in Cosmos DB the table name.
    column: String
    examples:
    - myFile.txt
    - myTableName
    name: faas_document_name
    type: string
  faas.document.operation:
    brief: Describes the type of the operation that was performed on the data.
    column: String
    name: faas_document_operation
    type: string
  faas.document.time:
    brief: |
      A string containing the time when the data was accessed in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).
    column: DateTime
    examples:
    - "2020-01-23T13:47:06Z"
    name: faas_document_time
    type: string
  faas.instance:
    brief: |
      The execution environment ID as a string, that will be potentially reused for other invocations to the same function/function version.
    column: String
    examples:
    - 2021/06/28/[$LATEST]2f399eb14537447da05ab2a2e39309de
    name: faas_instance
    type: string
  faas.invocation_id:
    brief: The invocation ID of the current function invocation.
    column: String
    examples:
    - af9d5aa4-a685-4c5f-a22b-444f80b3cc28
    name: faas_invocation_id
    type: string
  faas.invoked_name:
    brief: |
      The name of the invoked function.
    column: String
    examples:
    - my-function
    name: faas_invoked_name
    type: string
  faas.invoked_provider:
    brief: |
      The cloud provider of the invoked function.
    column: String
    name: faas_invoked_provider
    type: string
  faas.invoked_region:
    brief: |
      The cloud region of the invoked function.
    column: String
    examples:
    - eu-central-1
    name: faas_invoked_region
    type: string
  faas.max_memory:
    brief: |
      The amount of memory available to the serverless function converted to Bytes.
    column: Int64
    examples:
    - 134217728
    name: faas_max_memory
    type: int
  faas.name:
    brief: |
      The name of the single function that this runtime instance executes.
    column: String
    examples:
    - my-function
    - myazurefunctionapp/some-function-name
    name: faas_name
    type: string
  faas.time:
    brief: |
      A string containing the function invocation time in the [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html) format expressed in [UTC](https://www.w3.org/TR/NOTE-datetime).
    column: DateTime
    examples:
    - "2020-01-23T13:47:06Z"
    name: faas_time
    type: string
  faas.trigger:
    brief: Type of the trigger which caused this function invocation.
    column: Enum8(0 = 'datasource', 1 = 'http', 2 = 'pubsub', 3 = 'timer', 4 = 'other')
    enum:
    - datasource
    - http
    - pubsub
    - timer
    - other
    name: faas_trigger
    type: string
  faas.version:
    brief: The immutable version of the function being executed.
    column: String
    examples:
    - "26"
    - pinkfroid-00002
    name: faas_version
    type: string
  feature_flag.key:
    brief: The unique identifier of the feature flag.
    column: String
    examples:
    - logo-color
    name: feature_flag_key
    type: string
  feature_flag.provider_name:
    brief: The name of the service provider that performs the flag evaluation.
    column: String
    examples:
    - Flag Manager
    name: feature_flag_provider_name
    type: string
  feature_flag.variant:
    brief: |
      SHOULD be a semantic identifier for a value. If one is unavailable, a stringified version of the value can be used.
    column: String
    examples:
    - red
    - "true"
    - "on"
    name: feature_flag_variant
    type: string
  gcp.cloud_run.job.execution:
    brief: |
      The name of the Cloud Run [execution](https://cloud.google.com/run/docs/managing/job-executions) being run for the Job, as set by the [`CLOUD_RUN_EXECUTION`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.
    column: String
    examples:
    - job-name-xxxx
    - sample-job-mdw84
    name: gcp_cloud_run_job_execution
    type: string
  gcp.cloud_run.job.task_index:
    brief: |
      The index for a task within an execution as provided by the [`CLOUD_RUN_TASK_INDEX`](https://cloud.google.com/run/docs/container-contract#jobs-env-vars) environment variable.
    column: Int64
    examples:
    - 0
    - 1
    name: gcp_cloud_run_job_task_index
    type: int
  gcp.gce.instance.hostname:
    brief: |
      The hostname of a GCE instance. This is the full value of the default or [custom hostname](https://cloud.google.com/compute/docs/instances/custom-hostname-vm).
    column: String
    examples:
    - my-host1234.example.com
    - sample-vm.us-west1-b.c.my-project.internal
    name: gcp_gce_instance_hostname
    type: string
  gcp.gce.instance.name:
    brief: |
      The instance name of a GCE instance. This is the value provided by `host.name`, the visible name of the instance in the Cloud Console UI, and the prefix for the default hostname of the instance as defined by the [default internal DNS name](https://cloud.google.com/compute/docs/internal-dns#instance-fully-qualified-domain-names).
    column: String
    examples:
    - instance-1
    - my-vm-name
    name: gcp_gce_instance_name
    type: string
  heroku.app.id:
    brief: |
      Unique identifier for the application
    column: String
    examples:
    - 2daa2797-e42b-4624-9322-ec3f968df4da
    name: heroku_app_id
    type: string
  heroku.release.commit:
    brief: |
      Commit hash for the current release
    column: String
    examples:
    - e6134959463efd8966b20e75b913cafe3f5ec
    name: heroku_release_commit
    type: string
  heroku.release.creation_timestamp:
    brief: |
      Time and date the release was created
    column: String
    examples:
    - "2022-10-23T18:00:42Z"
    name: heroku_release_creation_timestamp
    type: string
  host.arch:
    brief: |
      The CPU architecture the host system is running on.
    column: String
    name: host_arch
    type: string
  host.cpu.cache.l2.size:
    brief: |
      The amount of level 2 memory cache available to the processor (in Bytes).
    column: Int64
    examples:
    - 12288000
    name: host_cpu_cache_l2_size
    type: int
  host.cpu.family:
    brief: |
      Family or generation of the CPU.
    column: String
    examples:
    - "6"
    - PA-RISC 1.1e
    name: host_cpu_family
    type: string
  host.cpu.model.id:
    brief: |
      Model identifier. It provides more granular information about the CPU, distinguishing it from other CPUs within the same family.
    column: String
    examples:
    - "6"
    - 9000/778/B180L
    name: host_cpu_model_id
    type: string
  host.cpu.model.name:
    brief: |
      Model designation of the processor.
    column: String
    examples:
    - 11th Gen Intel(R) Core(TM) i7-1185G7 @ 3.00GHz
    name: host_cpu_model_name
    type: string
  host.cpu.stepping:
    brief: |
      Stepping or core revisions.
    column: Int64
    examples:
    - 1
    name: host_cpu_stepping
    type: int
  host.cpu.vendor.id:
    brief: |
      Processor manufacturer identifier. A maximum 12-character string.
    column: String
    examples:
    - GenuineIntel
    name: host_cpu_vendor_id
    type: string
  host.id:
    brief: |
      Unique host ID. For Cloud, this must be the instance_id assigned by the cloud provider. For non-containerized systems, this should be the `machine-id`. See the table below for the sources to use to determine the `machine-id` based on operating system.
    column: String
    examples:
    - fdbf79e8af94cb7f9e8df36789187052
    name: host_id
    type: string
  host.image.id:
    brief: |
      VM image ID or host OS image ID. For Cloud, this value is from the provider.
    column: String
    examples:
    - ami-07b06b442921831e5
    name: host_image_id
    type: string
  host.image.name:
    brief: |
      Name of the VM image or OS install the host was instantiated from.
    column: String
    examples:
    - infra-ami-eks-worker-node-7d4ec78312
    - CentOS-8-x86_64-1905
    name: host_image_name
    type: string
  host.image.version:
    brief: |
      The version string of the VM image or host OS as defined in [Version Attributes](/docs/resource/README.md#version-attributes).
    column: String
    examples:
    - "0.1"
    name: host_image_version
    type: string
  host.ip:
    brief: |
      Available IP addresses of the host, excluding loopback interfaces.
    column: Array(String)
    examples:
    - 192.168.1.140
    - fe80::abc2:4a28:737a:609e
    name: host_ip
    type: string[]
  host.mac:
    brief: |
      Available MAC addresses of the host, excluding loopback interfaces.
    column: Array(String)
    examples:
    - AC-DE-48-23-45-67
    - AC-DE-48-23-45-67-01-9F
    name: host_mac
    type: string[]
  host.name:
    brief: |
      Name of the host. On Unix systems, it may contain what the hostname command returns, or the fully qualified hostname, or another name specified by the user.
    column: String
    examples:
    - opentelemetry-test
    name: host_name
    type: string
  host.type:
    brief: |
      Type of host. For Cloud, this must be the machine type.
    column: String
    examples:
    - n1-standard-1
    name: host_type
    type: string
  http.request.body.size:
    brief: |
      The size of the request payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.
    column: Int64
    examples:
    - 3495
    name: http_request_body_size
    type: int
  http.request.header:
    brief: |
      HTTP request headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.
    column: Array(String)
    examples:
    - http.request.header.content-type=["application/json"]
    - http.request.header.x-forwarded-for=["1.2.3.4", "1.2.3.5"]
    name: http_request_header
    type: template[string[]]
  http.request.method:
    brief: HTTP request method.
    column: String
    examples:
    - GET
    - POST
    - HEAD
    name: http_request_method
    type: string
  http.request.method_original:
    brief: Original HTTP method sent by the client in the request line.
    column: String
    examples:
    - GeT
    - ACL
    - foo
    name: http_request_method_original
    type: string
  http.request.resend_count:
    brief: |
      The ordinal number of request resending attempt (for any reason, including redirects).
    column: Int64
    examples:
    - 3
    name: http_request_resend_count
    type: int
  http.response.body.size:
    brief: |
      The size of the response payload body in bytes. This is the number of bytes transferred excluding headers and is often, but not always, present as the [Content-Length](https://www.rfc-editor.org/rfc/rfc9110.html#field.content-length) header. For requests using transport encoding, this should be the compressed size.
    column: Int64
    examples:
    - 3495
    name: http_response_body_size
    type: int
  http.response.header:
    brief: |
      HTTP response headers, `<key>` being the normalized HTTP Header name (lowercase), the value being the header values.
    column: Array(String)
    examples:
    - http.response.header.content-type=["application/json"]
    - http.response.header.my-custom-header=["abc", "def"]
    name: http_response_header
    type: template[string[]]
  http.response.status_code:
    brief: '[HTTP response status code](https://tools.ietf.org/html/rfc7231#section-6).'
    column: Int64
    examples:
    - 200
    name: http_response_status_code
    type: int
  http.route:
    brief: |
      The matched route, that is, the path template in the format used by the respective server framework.
    column: String
    examples:
    - /users/:userID?
    - '{controller}/{action}/{id?}'
    name: http_route
    type: string
  ios.state:
    brief: |
      This attribute represents the state the application has transitioned into at the occurrence of the event.
    column: Enum8(0 = 'active', 1 = 'inactive', 2 = 'background', 3 = 'foreground',
      4 = 'terminate')
    enum:
    - active
    - inactive
    - background
    - foreground
    - terminate
    name: ios_state
    type: string
  jvm.buffer.pool.name:
    brief: Name of the buffer pool.
    column: String
    examples:
    - mapped
    - direct
    name: jvm_buffer_pool_name
    type: string
  jvm.gc.action:
    brief: Name of the garbage collector action.
    column: String
    examples:
    - end of minor GC
    - end of major GC
    name: jvm_gc_action
    type: string
  jvm.gc.name:
    brief: Name of the garbage collector.
    column: String
    examples:
    - G1 Young Generation
    - G1 Old Generation
    name: jvm_gc_name
    type: string
  jvm.memory.pool.name:
    brief: Name of the memory pool.
    column: String
    examples:
    - G1 Old Gen
    - G1 Eden space
    - G1 Survivor Space
    name: jvm_memory_pool_name
    type: string
  jvm.memory.type:
    brief: The type of memory.
    column: Enum8(0 = 'heap', 1 = 'non_heap')
    enum:
    - heap
    - non_heap
    name: jvm_memory_type
    type: string
  jvm.thread.daemon:
    brief: Whether the thread is daemon or not.
    column: Bool
    name: jvm_thread_daemon
    type: boolean
  jvm.thread.state:
    brief: State of the thread.
    column: Enum8(0 = 'new', 1 = 'runnable', 2 = 'blocked', 3 = 'waiting', 4 = 'timed_waiting',
      5 = 'terminated')
    enum:
    - new
    - runnable
    - blocked
    - waiting
    - timed_waiting
    - terminated
    name: jvm_thread_state
    type: string
  k8s.cluster.name:
    brief: |
      The name of the cluster.
    column: String
    examples:
    - opentelemetry-cluster
    name: k8s_cluster_name
    type: string
  k8s.cluster.uid:
    brief: |
      A pseudo-ID for the cluster, set to the UID of the `kube-system` namespace.
    column: UUID
    examples:
    - 218fc5a9-a5f1-4b54-aa05-46717d0ab26d
    name: k8s_cluster_uid
    type: string
  k8s.container.name:
    brief: |
      The name of the Container from Pod specification, must be unique within a Pod. Container runtime usually uses different globally unique name (`container.name`).
    column: String
    examples:
    - redis
    name: k8s_container_name
    type: string
  k8s.container.restart_count:
    brief: |
      Number of times the container was restarted. This attribute can be used to identify a particular container (running or stopped) within a container spec.
    column: Int64
    examples:
    - 0
    - 2
    name: k8s_container_restart_count
    type: int
  k8s.cronjob.name:
    brief: |
      The name of the CronJob.
    column: String
    examples:
    - opentelemetry
    name: k8s_cronjob_name
    type: string
  k8s.cronjob.uid:
    brief: |
      The UID of the CronJob.
    column: UUID
    examples:
    - 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff
    name: k8s_cronjob_uid
    type: string
  k8s.daemonset.name:
    brief: |
      The name of the DaemonSet.
    column: String
    examples:
    - opentelemetry
    name: k8s_daemonset_name
    type: string
  k8s.daemonset.uid:
    brief: |
      The UID of the DaemonSet.
    column: UUID
    examples:
    - 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff
    name: k8s_daemonset_uid
    type: string
  k8s.deployment.name:
    brief: |
      The name of the Deployment.
    column: String
    examples:
    - opentelemetry
    name: k8s_deployment_name
    type: string
  k8s.deployment.uid:
    brief: |
      The UID of the Deployment.
    column: UUID
    examples:
    - 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff
    name: k8s_deployment_uid
    type: string
  k8s.job.name:
    brief: |
      The name of the Job.
    column: String
    examples:
    - opentelemetry
    name: k8s_job_name
    type: string
  k8s.job.uid:
    brief: |
      The UID of the Job.
    column: UUID
    examples:
    - 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff
    name: k8s_job_uid
    type: string
  k8s.namespace.name:
    brief: |
      The name of the namespace that the pod is running in.
    column: String
    examples:
    - default
    name: k8s_namespace_name
    type: string
  k8s.node.name:
    brief: |
      The name of the Node.
    column: String
    examples:
    - node-1
    name: k8s_node_name
    type: string
  k8s.node.uid:
    brief: |
      The UID of the Node.
    column: UUID
    examples:
    - 1eb3a0c6-0477-4080-a9cb-0cb7db65c6a2
    name: k8s_node_uid
    type: string
  k8s.pod.name:
    brief: |
      The name of the Pod.
    column: String
    examples:
    - opentelemetry-pod-autoconf
    name: k8s_pod_name
    type: string
  k8s.pod.uid:
    brief: |
      The UID of the Pod.
    column: UUID
    examples:
    - 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff
    name: k8s_pod_uid
    type: string
  k8s.replicaset.name:
    brief: |
      The name of the ReplicaSet.
    column: String
    examples:
    - opentelemetry
    name: k8s_replicaset_name
    type: string
  k8s.replicaset.uid:
    brief: |
      The UID of the ReplicaSet.
    column: UUID
    examples:
    - 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff
    name: k8s_replicaset_uid
    type: string
  k8s.statefulset.name:
    brief: |
      The name of the StatefulSet.
    column: String
    examples:
    - opentelemetry
    name: k8s_statefulset_name
    type: string
  k8s.statefulset.uid:
    brief: |
      The UID of the StatefulSet.
    column: UUID
    examples:
    - 275ecb36-5aa8-4c2a-9c47-d8bb681b9aff
    name: k8s_statefulset_uid
    type: string
  log.file.name:
    brief: |
      The basename of the file.
    column: String
    examples:
    - audit.log
    name: log_file_name
    type: string
  log.file.name_resolved:
    brief: |
      The basename of the file, with symlinks resolved.
    column: String
    examples:
    - uuid.log
    name: log_file_name_resolved
    type: string
  log.file.path:
    brief: |
      The full path to the file.
    column: String
    examples:
    - /var/log/mysql/audit.log
    name: log_file_path
    type: string
  log.file.path_resolved:
    brief: |
      The full path to the file, with symlinks resolved.
    column: String
    examples:
    - /var/lib/docker/uuid.log
    name: log_file_path_resolved
    type: string
  log.iostream:
    brief: |
      The stream associated with the log. See below for a list of well-known values.
    column: Enum8(0 = 'stdout', 1 = 'stderr')
    enum:
    - stdout
    - stderr
    name: log_iostream
    type: string
  log.record.uid:
    brief: |
      A unique identifier for the Log Record.
    column: String
    examples:
    - 01ARZ3NDEKTSV4RRFFQ69G5FAV
    name: log_record_uid
    type: string
  message.compressed_size:
    brief: Compressed size of the message in bytes.
    column: Int64
    name: message_compressed_size
    type: int
  message.id:
    brief: MUST be calculated as two different counters starting from `1` one for
      sent messages and one for received message.
    column: Int64
    name: message_id
    type: int
  message.type:
    brief: Whether this is a received or sent message.
    column: Enum8(0 = 'SENT', 1 = 'RECEIVED')
    enum:
    - SENT
    - RECEIVED
    name: message_type
    type: string
  message.uncompressed_size:
    brief: Uncompressed size of the message in bytes.
    column: Int64
    name: message_uncompressed_size
    type: int
  messaging.batch.message_count:
    brief: The number of messages sent, received, or processed in the scope of the
      batching operation.
    column: Int64
    examples:
    - 0
    - 1
    - 2
    name: messaging_batch_message_count
    type: int
  messaging.client_id:
    brief: |
      A unique identifier for the client that consumes or produces a message.
    column: String
    examples:
    - client-5
    - myhost@8742@s8083jm
    name: messaging_client_id
    type: string
  messaging.destination.anonymous:
    brief: A boolean that is true if the message destination is anonymous (could be
      unnamed or have auto-generated name).
    column: Bool
    name: messaging_destination_anonymous
    type: boolean
  messaging.destination.name:
    brief: The message destination name
    column: String
    examples:
    - MyQueue
    - MyTopic
    name: messaging_destination_name
    type: string
  messaging.destination.template:
    brief: Low cardinality representation of the messaging destination name
    column: String
    examples:
    - /customers/{customerId}
    name: messaging_destination_template
    type: string
  messaging.destination.temporary:
    brief: A boolean that is true if the message destination is temporary and might
      not exist anymore after messages are processed.
    column: Bool
    name: messaging_destination_temporary
    type: boolean
  messaging.destination_publish.anonymous:
    brief: A boolean that is true if the publish message destination is anonymous
      (could be unnamed or have auto-generated name).
    column: Bool
    name: messaging_destination_publish_anonymous
    type: boolean
  messaging.destination_publish.name:
    brief: The name of the original destination the message was published to
    column: String
    examples:
    - MyQueue
    - MyTopic
    name: messaging_destination_publish_name
    type: string
  messaging.gcp_pubsub.message.ordering_key:
    brief: |
      The ordering key for a given message. If the attribute is not present, the message does not have an ordering key.
    column: String
    examples:
    - ordering_key
    name: messaging_gcp_pubsub_message_ordering_key
    type: string
  messaging.kafka.consumer.group:
    brief: |
      Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.
    column: String
    examples:
    - my-group
    name: messaging_kafka_consumer_group
    type: string
  messaging.kafka.destination.partition:
    brief: |
      Partition the message is sent to.
    column: Int64
    examples:
    - 2
    name: messaging_kafka_destination_partition
    type: int
  messaging.kafka.message.key:
    brief: |
      Message keys in Kafka are used for grouping alike messages to ensure they're processed on the same partition. They differ from `messaging.message.id` in that they're not unique. If the key is `null`, the attribute MUST NOT be set.
    column: String
    examples:
    - myKey
    name: messaging_kafka_message_key
    type: string
  messaging.kafka.message.offset:
    brief: |
      The offset of a record in the corresponding Kafka partition.
    column: Int64
    examples:
    - 42
    name: messaging_kafka_message_offset
    type: int
  messaging.kafka.message.tombstone:
    brief: A boolean that is true if the message is a tombstone.
    column: Bool
    name: messaging_kafka_message_tombstone
    type: boolean
  messaging.message.body.size:
    brief: |
      The size of the message body in bytes.
    column: Int64
    examples:
    - 1439
    name: messaging_message_body_size
    type: int
  messaging.message.conversation_id:
    brief: |
      The conversation ID identifying the conversation to which the message belongs, represented as a string. Sometimes called "Correlation ID".
    column: String
    examples:
    - MyConversationId
    name: messaging_message_conversation_id
    type: string
  messaging.message.envelope.size:
    brief: |
      The size of the message body and metadata in bytes.
    column: Int64
    examples:
    - 2738
    name: messaging_message_envelope_size
    type: int
  messaging.message.id:
    brief: A value used by the messaging system as an identifier for the message,
      represented as a string.
    column: String
    examples:
    - 452a7c7c7c7048c2f887f61572b18fc2
    name: messaging_message_id
    type: string
  messaging.operation:
    brief: |
      A string identifying the kind of messaging operation.
    column: String
    name: messaging_operation
    type: string
  messaging.rabbitmq.destination.routing_key:
    brief: |
      RabbitMQ message routing key.
    column: String
    examples:
    - myKey
    name: messaging_rabbitmq_destination_routing_key
    type: string
  messaging.rocketmq.client_group:
    brief: |
      Name of the RocketMQ producer/consumer group that is handling the message. The client type is identified by the SpanKind.
    column: String
    examples:
    - myConsumerGroup
    name: messaging_rocketmq_client_group
    type: string
  messaging.rocketmq.consumption_model:
    brief: |
      Model of message consumption. This only applies to consumer spans.
    column: Enum8(0 = 'clustering', 1 = 'broadcasting')
    enum:
    - clustering
    - broadcasting
    name: messaging_rocketmq_consumption_model
    type: string
  messaging.rocketmq.message.delay_time_level:
    brief: |
      The delay time level for delay message, which determines the message delay time.
    column: Int64
    examples:
    - 3
    name: messaging_rocketmq_message_delay_time_level
    type: int
  messaging.rocketmq.message.delivery_timestamp:
    brief: |
      The timestamp in milliseconds that the delay message is expected to be delivered to consumer.
    column: Int64
    examples:
    - 1665987217045
    name: messaging_rocketmq_message_delivery_timestamp
    type: int
  messaging.rocketmq.message.group:
    brief: |
      It is essential for FIFO message. Messages that belong to the same message group are always processed one by one within the same consumer group.
    column: String
    examples:
    - myMessageGroup
    name: messaging_rocketmq_message_group
    type: string
  messaging.rocketmq.message.keys:
    brief: |
      Key(s) of message, another way to mark message besides message id.
    column: Array(String)
    examples:
    - keyA
    - keyB
    name: messaging_rocketmq_message_keys
    type: string[]
  messaging.rocketmq.message.tag:
    brief: |
      The secondary classifier of message besides topic.
    column: String
    examples:
    - tagA
    name: messaging_rocketmq_message_tag
    type: string
  messaging.rocketmq.message.type:
    brief: |
      Type of message.
    column: Enum8(0 = 'normal', 1 = 'fifo', 2 = 'delay', 3 = 'transaction')
    enum:
    - normal
    - fifo
    - delay
    - transaction
    name: messaging_rocketmq_message_type
    type: string
  messaging.rocketmq.namespace:
    brief: |
      Namespace of RocketMQ resources, resources in different namespaces are individual.
    column: String
    examples:
    - myNamespace
    name: messaging_rocketmq_namespace
    type: string
  messaging.system:
    brief: |
      An identifier for the messaging system being used. See below for a list of well-known identifiers.
    column: String
    name: messaging_system
    type: string
  network.carrier.icc:
    brief: The ISO 3166-1 alpha-2 2-character country code associated with the mobile
      carrier network.
    column: String
    examples:
    - DE
    name: network_carrier_icc
    type: string
  network.carrier.mcc:
    brief: The mobile carrier country code.
    column: String
    examples:
    - "310"
    name: network_carrier_mcc
    type: string
  network.carrier.mnc:
    brief: The mobile carrier network code.
    column: String
    examples:
    - "001"
    name: network_carrier_mnc
    type: string
  network.carrier.name:
    brief: The name of the mobile carrier.
    column: String
    examples:
    - sprint
    name: network_carrier_name
    type: string
  network.connection.subtype:
    brief: This describes more details regarding the connection.type. It may be the
      type of cell technology connection, but it could be used for describing details
      about a wifi connection.
    column: String
    examples:
    - LTE
    name: network_connection_subtype
    type: string
  network.connection.type:
    brief: The internet connection type.
    column: String
    examples:
    - wifi
    name: network_connection_type
    type: string
  network.io.direction:
    brief: The network IO operation direction.
    column: Enum8(0 = 'transmit', 1 = 'receive')
    enum:
    - transmit
    - receive
    name: network_io_direction
    type: string
  network.local.address:
    brief: Local address of the network connection - IP address or Unix domain socket
      name.
    column: String
    examples:
    - 10.1.2.80
    - /tmp/my.sock
    name: network_local_address
    type: string
  network.local.port:
    brief: Local port number of the network connection.
    column: UInt16
    examples:
    - 65123
    name: network_local_port
    type: int
  network.peer.address:
    brief: Peer address of the network connection - IP address or Unix domain socket
      name.
    column: String
    examples:
    - 10.1.2.80
    - /tmp/my.sock
    name: network_peer_address
    type: string
  network.peer.port:
    brief: Peer port number of the network connection.
    column: UInt16
    examples:
    - 65123
    name: network_peer_port
    type: int
  network.protocol.name:
    brief: '[OSI application layer](https://osi-model.com/application-layer/) or non-OSI
      equivalent.'
    column: String
    examples:
    - amqp
    - http
    - mqtt
    name: network_protocol_name
    type: string
  network.protocol.version:
    brief: Version of the protocol specified in `network.protocol.name`.
    column: String
    examples:
    - 3.1.1
    name: network_protocol_version
    type: string
  network.transport:
    brief: |
      [OSI transport layer](https://osi-model.com/transport-layer/) or [inter-process communication method](https://wikipedia.org/wiki/Inter-process_communication).
    column: String
    examples:
    - tcp
    - udp
    name: network_transport
    type: string
  network.type:
    brief: '[OSI network layer](https://osi-model.com/network-layer/) or non-OSI equivalent.'
    column: String
    examples:
    - ipv4
    - ipv6
    name: network_type
    type: string
  oci.manifest.digest:
    brief: |
      The digest of the OCI image manifest. For container images specifically is the digest by which the container image is known.
    column: String
    examples:
    - sha256:e4ca62c0d62f3e886e684806dfe9d4e0cda60d54986898173c1083856cfda0f4
    name: oci_manifest_digest
    type: string
  opentracing.ref_type:
    brief: Parent-child Reference type
    column: Enum8(0 = 'child_of', 1 = 'follows_from')
    enum:
    - child_of
    - follows_from
    name: opentracing_ref_type
    type: string
  os.build_id:
    brief: Unique identifier for a particular build or compilation of the operating
      system.
    column: String
    examples:
    - TQ3C.230805.001.B2
    - "20E247"
    - "22621"
    name: os_build_id
    type: string
  os.description:
    brief: |
      Human readable (not intended to be parsed) OS version information, like e.g. reported by `ver` or `lsb_release -a` commands.
    column: String
    examples:
    - Microsoft Windows [Version 10.0.18363.778]
    - Ubuntu 18.04.1 LTS
    name: os_description
    type: string
  os.name:
    brief: Human readable operating system name.
    column: String
    examples:
    - iOS
    - Android
    - Ubuntu
    name: os_name
    type: string
  os.type:
    brief: |
      The operating system type.
    column: String
    name: os_type
    type: string
  os.version:
    brief: |
      The version string of the operating system as defined in [Version Attributes](/docs/resource/README.md#version-attributes).
    column: String
    examples:
    - 14.2.1
    - 18.04.1
    name: os_version
    type: string
  otel.scope.name:
    brief: The name of the instrumentation scope - (`InstrumentationScope.Name` in
      OTLP).
    column: String
    examples:
    - io.opentelemetry.contrib.mongodb
    name: otel_scope_name
    type: string
  otel.scope.version:
    brief: The version of the instrumentation scope - (`InstrumentationScope.Version`
      in OTLP).
    column: String
    examples:
    - 1.0.0
    name: otel_scope_version
    type: string
  otel.status_code:
    brief: Name of the code, either "OK" or "ERROR". MUST NOT be set if the status
      code is UNSET.
    column: Enum8(0 = 'OK', 1 = 'ERROR')
    enum:
    - OK
    - ERROR
    name: otel_status_code
    type: string
  otel.status_description:
    brief: Description of the Status if it has a value, otherwise not set.
    column: String
    examples:
    - resource not found
    name: otel_status_description
    type: string
  peer.service:
    brief: |
      The [`service.name`](/docs/resource/README.md#service) of the remote service. SHOULD be equal to the actual `service.name` resource attribute of the remote service if any.
    column: String
    examples:
    - AuthTokenCache
    name: peer_service
    type: string
  pool.name:
    brief: |
      The name of the connection pool; unique within the instrumented application. In case the connection pool implementation doesn't provide a name, then the [db.connection_string](/docs/database/database-spans.md#connection-level-attributes) should be used
    column: String
    examples:
    - myDataSource
    name: pool_name
    type: string
  process.command:
    brief: |
      The command used to launch the process (i.e. the command name). On Linux based systems, can be set to the zeroth string in `proc/[pid]/cmdline`. On Windows, can be set to the first parameter extracted from `GetCommandLineW`.
    column: String
    examples:
    - cmd/otelcol
    name: process_command
    type: string
  process.command_args:
    brief: |
      All the command arguments (including the command/executable itself) as received by the process. On Linux-based systems (and some other Unixoid systems supporting procfs), can be set according to the list of null-delimited strings extracted from `proc/[pid]/cmdline`. For libc-based executables, this would be the full argv vector passed to `main`.
    column: Array(String)
    examples:
    - cmd/otecol
    - --config=config.yaml
    name: process_command_args
    type: string[]
  process.command_line:
    brief: |
      The full command used to launch the process as a single string representing the full command. On Windows, can be set to the result of `GetCommandLineW`. Do not set this if you have to assemble it just for monitoring; use `process.command_args` instead.
    column: String
    examples:
    - C:\cmd\otecol --config="my directory\config.yaml"
    name: process_command_line
    type: string
  process.executable.name:
    brief: |
      The name of the process executable. On Linux based systems, can be set to the `Name` in `proc/[pid]/status`. On Windows, can be set to the base name of `GetProcessImageFileNameW`.
    column: String
    examples:
    - otelcol
    name: process_executable_name
    type: string
  process.executable.path:
    brief: |
      The full path to the process executable. On Linux based systems, can be set to the target of `proc/[pid]/exe`. On Windows, can be set to the result of `GetProcessImageFileNameW`.
    column: String
    examples:
    - /usr/bin/cmd/otelcol
    name: process_executable_path
    type: string
  process.owner:
    brief: |
      The username of the user that owns the process.
    column: String
    examples:
    - root
    name: process_owner
    type: string
  process.parent_pid:
    brief: |
      Parent Process identifier (PID).
    column: Int64
    examples:
    - 111
    name: process_parent_pid
    type: int
  process.pid:
    brief: |
      Process identifier (PID).
    column: Int64
    examples:
    - 1234
    name: process_pid
    type: int
  process.runtime.description:
    brief: |
      An additional description about the runtime of the process, for example a specific vendor customization of the runtime environment.
    column: String
    examples:
    - Eclipse OpenJ9 Eclipse OpenJ9 VM openj9-0.21.0
    name: process_runtime_description
    type: string
  process.runtime.name:
    brief: |
      The name of the runtime of this process. For compiled native binaries, this SHOULD be the name of the compiler.
    column: String
    examples:
    - OpenJDK Runtime Environment
    name: process_runtime_name
    type: string
  process.runtime.version:
    brief: |
      The version of the runtime of this process, as returned by the runtime without modification.
    column: String
    examples:
    - 14.0.2
    name: process_runtime_version
    type: string
  rpc.connect_rpc.error_code:
    brief: The [error codes](https://connect.build/docs/protocol/#error-codes) of
      the Connect request. Error codes are always string values.
    column: Enum8(0 = 'cancelled', 1 = 'unknown', 2 = 'invalid_argument', 3 = 'deadline_exceeded',
      4 = 'not_found', 5 = 'already_exists', 6 = 'permission_denied', 7 = 'resource_exhausted',
      8 = 'failed_precondition', 9 = 'aborted', 10 = 'out_of_range', 11 = 'unimplemented',
      12 = 'internal', 13 = 'unavailable', 14 = 'data_loss', 15 = 'unauthenticated')
    enum:
    - cancelled
    - unknown
    - invalid_argument
    - deadline_exceeded
    - not_found
    - already_exists
    - permission_denied
    - resource_exhausted
    - failed_precondition
    - aborted
    - out_of_range
    - unimplemented
    - internal
    - unavailable
    - data_loss
    - unauthenticated
    name: rpc_connect_rpc_error_code
    type: string
  rpc.connect_rpc.request.metadata:
    brief: |
      Connect request metadata, `<key>` being the normalized Connect Metadata key (lowercase), the value being the metadata values.
    column: Array(String)
    examples:
    - rpc.request.metadata.my-custom-metadata-attribute=["1.2.3.4", "1.2.3.5"]
    name: rpc_connect_rpc_request_metadata
    type: template[string[]]
  rpc.connect_rpc.response.metadata:
    brief: |
      Connect response metadata, `<key>` being the normalized Connect Metadata key (lowercase), the value being the metadata values.
    column: Array(String)
    examples:
    - rpc.response.metadata.my-custom-metadata-attribute=["attribute_value"]
    name: rpc_connect_rpc_response_metadata
    type: template[string[]]
  rpc.grpc.request.metadata:
    brief: |
      gRPC request metadata, `<key>` being the normalized gRPC Metadata key (lowercase), the value being the metadata values.
    column: Array(String)
    examples:
    - rpc.grpc.request.metadata.my-custom-metadata-attribute=["1.2.3.4", "1.2.3.5"]
    name: rpc_grpc_request_metadata
    type: template[string[]]
  rpc.grpc.response.metadata:
    brief: |
      gRPC response metadata, `<key>` being the normalized gRPC Metadata key (lowercase), the value being the metadata values.
    column: Array(String)
    examples:
    - rpc.grpc.response.metadata.my-custom-metadata-attribute=["attribute_value"]
    name: rpc_grpc_response_metadata
    type: template[string[]]
  rpc.grpc.status_code:
    brief: The [numeric status code](https://github.com/grpc/grpc/blob/v1.33.2/doc/statuscodes.md)
      of the gRPC request.
    column: UInt8
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    name: rpc_grpc_status_code
    type: int
  rpc.jsonrpc.error_code:
    brief: '`error.code` property of response if it is an error response.'
    column: Int64
    examples:
    - -32700
    - 100
    name: rpc_jsonrpc_error_code
    type: int
  rpc.jsonrpc.error_message:
    brief: '`error.message` property of response if it is an error response.'
    column: String
    examples:
    - Parse error
    - User already exists
    name: rpc_jsonrpc_error_message
    type: string
  rpc.jsonrpc.request_id:
    brief: |
      `id` property of request or response. Since protocol allows id to be int, string, `null` or missing (for notifications), value is expected to be cast to string for simplicity. Use empty string in case of `null` value. Omit entirely if this is a notification.
    column: String
    examples:
    - "10"
    - request-7
    - ""
    name: rpc_jsonrpc_request_id
    type: string
  rpc.jsonrpc.version:
    brief: Protocol version as in `jsonrpc` property of request/response. Since JSON-RPC
      1.0 doesn't specify this, the value can be omitted.
    column: String
    examples:
    - "2.0"
    - "1.0"
    name: rpc_jsonrpc_version
    type: string
  rpc.method:
    brief: The name of the (logical) method being called, must be equal to the $method
      part in the span name.
    column: String
    examples:
    - exampleMethod
    name: rpc_method
    type: string
  rpc.service:
    brief: The full (logical) name of the service being called, including its package
      name, if applicable.
    column: String
    examples:
    - myservice.EchoService
    name: rpc_service
    type: string
  rpc.system:
    brief: A string identifying the remoting system. See below for a list of well-known
      identifiers.
    column: String
    name: rpc_system
    type: string
  server.address:
    brief: Server domain name if available without reverse DNS lookup; otherwise,
      IP address or Unix domain socket name.
    column: String
    examples:
    - example.com
    - 10.1.2.80
    - /tmp/my.sock
    name: server_address
    type: string
  server.port:
    brief: Server port number.
    column: UInt16
    examples:
    - 80
    - 8080
    - 443
    name: server_port
    type: int
  service.instance.id:
    brief: |
      The string ID of the service instance.
    column: String
    examples:
    - my-k8s-pod-deployment-1
    - 627cc493-f310-47de-96bd-71410b7dec09
    name: service_instance_id
    type: string
  service.name:
    brief: |
      Logical name of the service.
    column: String
    examples:
    - shoppingcart
    name: service_name
    type: string
  service.namespace:
    brief: |
      A namespace for `service.name`.
    column: String
    examples:
    - Shop
    name: service_namespace
    type: string
  service.version:
    brief: |
      The version string of the service API or implementation. The format is not defined by these conventions.
    column: String
    examples:
    - 2.0.0
    - a01dbef8a
    name: service_version
    type: string
  session.id:
    brief: A unique id to identify a session.
    column: String
    examples:
    - 00112233-4455-6677-8899-aabbccddeeff
    name: session_id
    type: string
  session.previous_id:
    brief: The previous `session.id` for this user, when known.
    column: String
    examples:
    - 00112233-4455-6677-8899-aabbccddeeff
    name: session_previous_id
    type: string
  source.address:
    brief: Source address - domain name if available without reverse DNS lookup; otherwise,
      IP address or Unix domain socket name.
    column: String
    examples:
    - source.example.com
    - 10.1.2.80
    - /tmp/my.sock
    name: source_address
    type: string
  source.port:
    brief: Source port number
    column: UInt16
    examples:
    - 3389
    - 2888
    name: source_port
    type: int
  state:
    brief: The state of a connection in the pool
    column: Enum8(0 = 'idle', 1 = 'used')
    enum:
    - idle
    - used
    name: state
    type: string
  system.cpu.logical_number:
    brief: The logical CPU number [0..n-1]
    column: Int64
    examples:
    - 1
    name: system_cpu_logical_number
    type: int
  system.cpu.state:
    brief: The state of the CPU
    column: String
    examples:
    - idle
    - interrupt
    name: system_cpu_state
    type: string
  system.device:
    brief: The device identifier
    column: String
    examples:
    - (identifier)
    name: system_device
    type: string
  system.filesystem.mode:
    brief: The filesystem mode
    column: String
    examples:
    - rw, ro
    name: system_filesystem_mode
    type: string
  system.filesystem.mountpoint:
    brief: The filesystem mount path
    column: String
    examples:
    - /mnt/data
    name: system_filesystem_mountpoint
    type: string
  system.filesystem.state:
    brief: The filesystem state
    column: Enum8(0 = 'used', 1 = 'free', 2 = 'reserved')
    enum:
    - used
    - free
    - reserved
    name: system_filesystem_state
    type: string
  system.filesystem.type:
    brief: The filesystem type
    column: String
    examples:
    - ext4
    name: system_filesystem_type
    type: string
  system.memory.state:
    brief: The memory state
    column: String
    examples:
    - free
    - cached
    name: system_memory_state
    type: string
  system.network.state:
    brief: A stateless protocol MUST NOT set this attribute
    column: Enum8(0 = 'close', 1 = 'close_wait', 2 = 'closing', 3 = 'delete', 4 =
      'established', 5 = 'fin_wait_1', 6 = 'fin_wait_2', 7 = 'last_ack', 8 = 'listen',
      9 = 'syn_recv', 10 = 'syn_sent', 11 = 'time_wait')
    enum:
    - close
    - close_wait
    - closing
    - delete
    - established
    - fin_wait_1
    - fin_wait_2
    - last_ack
    - listen
    - syn_recv
    - syn_sent
    - time_wait
    name: system_network_state
    type: string
  system.paging.direction:
    brief: The paging access direction
    column: Enum8(0 = 'in', 1 = 'out')
    enum:
    - in
    - out
    name: system_paging_direction
    type: string
  system.paging.state:
    brief: The memory paging state
    column: Enum8(0 = 'used', 1 = 'free')
    enum:
    - used
    - free
    name: system_paging_state
    type: string
  system.paging.type:
    brief: The memory paging type
    column: Enum8(0 = 'major', 1 = 'minor')
    enum:
    - major
    - minor
    name: system_paging_type
    type: string
  system.processes.status:
    brief: |
      The process state, e.g., [Linux Process State Codes](https://man7.org/linux/man-pages/man1/ps.1.html#PROCESS_STATE_CODES)
    column: String
    examples:
    - running
    name: system_processes_status
    type: string
  telemetry.distro.name:
    brief: |
      The name of the auto instrumentation agent or distribution, if used.
    column: String
    examples:
    - parts-unlimited-java
    name: telemetry_distro_name
    type: string
  telemetry.distro.version:
    brief: |
      The version string of the auto instrumentation agent or distribution, if used.
    column: String
    examples:
    - 1.2.3
    name: telemetry_distro_version
    type: string
  telemetry.sdk.language:
    brief: |
      The language of the telemetry SDK.
    column: String
    name: telemetry_sdk_language
    type: string
  telemetry.sdk.name:
    brief: |
      The name of the telemetry SDK as defined above.
    column: String
    examples:
    - opentelemetry
    name: telemetry_sdk_name
    type: string
  telemetry.sdk.version:
    brief: |
      The version string of the telemetry SDK.
    column: String
    examples:
    - 1.2.3
    name: telemetry_sdk_version
    type: string
  thread.id:
    brief: |
      Current "managed" thread ID (as opposed to OS thread ID).
    column: Int64
    examples:
    - 42
    name: thread_id
    type: int
  thread.name:
    brief: |
      Current thread name.
    column: String
    examples:
    - main
    name: thread_name
    type: string
  tls.cipher:
    brief: |
      String indicating the [cipher](https://datatracker.ietf.org/doc/html/rfc5246#appendix-A.5) used during the current connection.
    column: String
    examples:
    - TLS_RSA_WITH_3DES_EDE_CBC_SHA
    - TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
    name: tls_cipher
    type: string
  tls.client.certificate:
    brief: |
      PEM-encoded stand-alone certificate offered by the client. This is usually mutually-exclusive of `client.certificate_chain` since this value also exists in that list.
    column: String
    examples:
    - MII...
    name: tls_client_certificate
    type: string
  tls.client.certificate_chain:
    brief: |
      Array of PEM-encoded certificates that make up the certificate chain offered by the client. This is usually mutually-exclusive of `client.certificate` since that value should be the first certificate in the chain.
    column: Array(String)
    examples:
    - MII...
    - MI...
    name: tls_client_certificate_chain
    type: string[]
  tls.client.hash.md5:
    brief: |
      Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
    column: String
    examples:
    - 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
    name: tls_client_hash_md5
    type: string
  tls.client.hash.sha1:
    brief: |
      Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
    column: String
    examples:
    - 9E393D93138888D288266C2D915214D1D1CCEB2A
    name: tls_client_hash_sha1
    type: string
  tls.client.hash.sha256:
    brief: |
      Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the client. For consistency with other hash values, this value should be formatted as an uppercase hash.
    column: String
    examples:
    - 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
    name: tls_client_hash_sha256
    type: string
  tls.client.issuer:
    brief: Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6)
      of the issuer of the x.509 certificate presented by the client.
    column: String
    examples:
    - CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
    name: tls_client_issuer
    type: string
  tls.client.ja3:
    brief: A hash that identifies clients based on how they perform an SSL/TLS handshake.
    column: String
    examples:
    - d4e5b18d6b55c71272893221c96ba240
    name: tls_client_ja3
    type: string
  tls.client.not_after:
    brief: Date/Time indicating when client certificate is no longer considered valid.
    column: String
    examples:
    - "2021-01-01T00:00:00.000Z"
    name: tls_client_not_after
    type: string
  tls.client.not_before:
    brief: Date/Time indicating when client certificate is first considered valid.
    column: String
    examples:
    - "1970-01-01T00:00:00.000Z"
    name: tls_client_not_before
    type: string
  tls.client.server_name:
    brief: Also called an SNI, this tells the server which hostname to which the client
      is attempting to connect to.
    column: String
    examples:
    - opentelemetry.io
    name: tls_client_server_name
    type: string
  tls.client.subject:
    brief: Distinguished name of subject of the x.509 certificate presented by the
      client.
    column: String
    examples:
    - CN=myclient, OU=Documentation Team, DC=example, DC=com
    name: tls_client_subject
    type: string
  tls.client.supported_ciphers:
    brief: Array of ciphers offered by the client during the client hello.
    column: Array(String)
    examples:
    - '"TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384", "TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384",
      "..."'
    name: tls_client_supported_ciphers
    type: string[]
  tls.curve:
    brief: String indicating the curve used for the given cipher, when applicable
    column: String
    examples:
    - secp256r1
    name: tls_curve
    type: string
  tls.established:
    brief: Boolean flag indicating if the TLS negotiation was successful and transitioned
      to an encrypted tunnel.
    column: Bool
    examples:
    - true
    name: tls_established
    type: boolean
  tls.next_protocol:
    brief: |
      String indicating the protocol being tunneled. Per the values in the [IANA registry](https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids), this string should be lower case.
    column: String
    examples:
    - http/1.1
    name: tls_next_protocol
    type: string
  tls.protocol.name:
    brief: |
      Normalized lowercase protocol name parsed from original string of the negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)
    column: String
    name: tls_protocol_name
    type: string
  tls.protocol.version:
    brief: |
      Numeric part of the version parsed from the original string of the negotiated [SSL/TLS protocol version](https://www.openssl.org/docs/man1.1.1/man3/SSL_get_version.html#RETURN-VALUES)
    column: String
    examples:
    - "1.2"
    - "3"
    name: tls_protocol_version
    type: string
  tls.resumed:
    brief: Boolean flag indicating if this TLS connection was resumed from an existing
      TLS negotiation.
    column: Bool
    examples:
    - true
    name: tls_resumed
    type: boolean
  tls.server.certificate:
    brief: |
      PEM-encoded stand-alone certificate offered by the server. This is usually mutually-exclusive of `server.certificate_chain` since this value also exists in that list.
    column: String
    examples:
    - MII...
    name: tls_server_certificate
    type: string
  tls.server.certificate_chain:
    brief: |
      Array of PEM-encoded certificates that make up the certificate chain offered by the server. This is usually mutually-exclusive of `server.certificate` since that value should be the first certificate in the chain.
    column: Array(String)
    examples:
    - MII...
    - MI...
    name: tls_server_certificate_chain
    type: string[]
  tls.server.hash.md5:
    brief: |
      Certificate fingerprint using the MD5 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
    column: String
    examples:
    - 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
    name: tls_server_hash_md5
    type: string
  tls.server.hash.sha1:
    brief: |
      Certificate fingerprint using the SHA1 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
    column: String
    examples:
    - 9E393D93138888D288266C2D915214D1D1CCEB2A
    name: tls_server_hash_sha1
    type: string
  tls.server.hash.sha256:
    brief: |
      Certificate fingerprint using the SHA256 digest of DER-encoded version of certificate offered by the server. For consistency with other hash values, this value should be formatted as an uppercase hash.
    column: String
    examples:
    - 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
    name: tls_server_hash_sha256
    type: string
  tls.server.issuer:
    brief: Distinguished name of [subject](https://datatracker.ietf.org/doc/html/rfc5280#section-4.1.2.6)
      of the issuer of the x.509 certificate presented by the client.
    column: String
    examples:
    - CN=Example Root CA, OU=Infrastructure Team, DC=example, DC=com
    name: tls_server_issuer
    type: string
  tls.server.ja3s:
    brief: A hash that identifies servers based on how they perform an SSL/TLS handshake.
    column: String
    examples:
    - d4e5b18d6b55c71272893221c96ba240
    name: tls_server_ja3s
    type: string
  tls.server.not_after:
    brief: Date/Time indicating when server certificate is no longer considered valid.
    column: String
    examples:
    - "2021-01-01T00:00:00.000Z"
    name: tls_server_not_after
    type: string
  tls.server.not_before:
    brief: Date/Time indicating when server certificate is first considered valid.
    column: String
    examples:
    - "1970-01-01T00:00:00.000Z"
    name: tls_server_not_before
    type: string
  tls.server.subject:
    brief: Distinguished name of subject of the x.509 certificate presented by the
      server.
    column: String
    examples:
    - CN=myserver, OU=Documentation Team, DC=example, DC=com
    name: tls_server_subject
    type: string
  url.fragment:
    brief: The [URI fragment](https://www.rfc-editor.org/rfc/rfc3986#section-3.5)
      component
    column: String
    examples:
    - SemConv
    name: url_fragment
    type: string
  url.full:
    brief: Absolute URL describing a network resource according to [RFC3986](https://www.rfc-editor.org/rfc/rfc3986)
    column: String
    examples:
    - https://www.foo.bar/search?q=OpenTelemetry#SemConv
    - //localhost
    name: url_full
    type: string
  url.path:
    brief: The [URI path](https://www.rfc-editor.org/rfc/rfc3986#section-3.3) component
    column: String
    examples:
    - /search
    name: url_path
    type: string
  url.query:
    brief: The [URI query](https://www.rfc-editor.org/rfc/rfc3986#section-3.4) component
    column: String
    examples:
    - q=OpenTelemetry
    name: url_query
    type: string
  url.scheme:
    brief: The [URI scheme](https://www.rfc-editor.org/rfc/rfc3986#section-3.1) component
      identifying the used protocol.
    column: String
    examples:
    - https
    - ftp
    - telnet
    name: url_scheme
    type: string
  user_agent.original:
    brief: |
      Value of the [HTTP User-Agent](https://www.rfc-editor.org/rfc/rfc9110.html#field.user-agent) header sent by the client.
    column: String
    examples:
    - CERN-LineMode/2.15 libwww/2.17b3
    - Mozilla/5.0 (iPhone; CPU iPhone OS 14_7_1 like Mac OS X) AppleWebKit/605.1.15
      (KHTML, like Gecko) Version/14.1.2 Mobile/15E148 Safari/604.1
    name: user_agent_original
    type: string
  webengine.description:
    brief: |
      Additional description of the web engine (e.g. detailed version and edition information).
    column: String
    examples:
    - WildFly Full 21.0.0.Final (WildFly Core 13.0.1.Final) - 2.2.2.Final
    name: webengine_description
    type: string
  webengine.name:
    brief: |
      The name of the web engine.
    column: String
    examples:
    - WildFly
    name: webengine_name
    type: string
  webengine.version:
    brief: |
      The version of the web engine.
    column: String
    examples:
    - 21.0.0
    name: webengine_version
    type: string
statistics:
  deprecated: 24
  enum: 23
  total: 668
  unknown: 0
