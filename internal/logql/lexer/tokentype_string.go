// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[EOF-1]
	_ = x[Ident-2]
	_ = x[String-3]
	_ = x[Number-4]
	_ = x[Duration-5]
	_ = x[Bytes-6]
	_ = x[Comma-7]
	_ = x[Dot-8]
	_ = x[OpenBrace-9]
	_ = x[CloseBrace-10]
	_ = x[Eq-11]
	_ = x[NotEq-12]
	_ = x[Re-13]
	_ = x[NotRe-14]
	_ = x[PipeExact-15]
	_ = x[PipeMatch-16]
	_ = x[Pipe-17]
	_ = x[Unwrap-18]
	_ = x[OpenParen-19]
	_ = x[CloseParen-20]
	_ = x[By-21]
	_ = x[Without-22]
	_ = x[Bool-23]
	_ = x[OpenBracket-24]
	_ = x[CloseBracket-25]
	_ = x[Offset-26]
	_ = x[On-27]
	_ = x[Ignoring-28]
	_ = x[GroupLeft-29]
	_ = x[GroupRight-30]
	_ = x[Or-31]
	_ = x[And-32]
	_ = x[Unless-33]
	_ = x[Add-34]
	_ = x[Sub-35]
	_ = x[Mul-36]
	_ = x[Div-37]
	_ = x[Mod-38]
	_ = x[Pow-39]
	_ = x[CmpEq-40]
	_ = x[Gt-41]
	_ = x[Gte-42]
	_ = x[Lt-43]
	_ = x[Lte-44]
	_ = x[JSON-45]
	_ = x[Regexp-46]
	_ = x[Logfmt-47]
	_ = x[Unpack-48]
	_ = x[Pattern-49]
	_ = x[LabelFormat-50]
	_ = x[LineFormat-51]
	_ = x[IP-52]
	_ = x[Decolorize-53]
	_ = x[Distinct-54]
	_ = x[Drop-55]
	_ = x[Keep-56]
	_ = x[Range-57]
	_ = x[Rate-58]
	_ = x[RateCounter-59]
	_ = x[CountOverTime-60]
	_ = x[BytesRate-61]
	_ = x[BytesOverTime-62]
	_ = x[AvgOverTime-63]
	_ = x[SumOverTime-64]
	_ = x[MinOverTime-65]
	_ = x[MaxOverTime-66]
	_ = x[StdvarOverTime-67]
	_ = x[StddevOverTime-68]
	_ = x[QuantileOverTime-69]
	_ = x[FirstOverTime-70]
	_ = x[LastOverTime-71]
	_ = x[AbsentOverTime-72]
	_ = x[Vector-73]
	_ = x[Sum-74]
	_ = x[Avg-75]
	_ = x[Max-76]
	_ = x[Min-77]
	_ = x[Count-78]
	_ = x[Stddev-79]
	_ = x[Stdvar-80]
	_ = x[Bottomk-81]
	_ = x[Topk-82]
	_ = x[Sort-83]
	_ = x[SortDesc-84]
	_ = x[LabelReplace-85]
	_ = x[BytesConv-86]
	_ = x[DurationConv-87]
	_ = x[DurationSecondsConv-88]
	_ = x[ParserFlag-89]
}

const _TokenType_name = "InvalidEOFIdentStringNumberDurationBytesCommaDotOpenBraceCloseBraceEqNotEqReNotRePipeExactPipeMatchPipeUnwrapOpenParenCloseParenByWithoutBoolOpenBracketCloseBracketOffsetOnIgnoringGroupLeftGroupRightOrAndUnlessAddSubMulDivModPowCmpEqGtGteLtLteJSONRegexpLogfmtUnpackPatternLabelFormatLineFormatIPDecolorizeDistinctDropKeepRangeRateRateCounterCountOverTimeBytesRateBytesOverTimeAvgOverTimeSumOverTimeMinOverTimeMaxOverTimeStdvarOverTimeStddevOverTimeQuantileOverTimeFirstOverTimeLastOverTimeAbsentOverTimeVectorSumAvgMaxMinCountStddevStdvarBottomkTopkSortSortDescLabelReplaceBytesConvDurationConvDurationSecondsConvParserFlag"

var _TokenType_index = [...]uint16{0, 7, 10, 15, 21, 27, 35, 40, 45, 48, 57, 67, 69, 74, 76, 81, 90, 99, 103, 109, 118, 128, 130, 137, 141, 152, 164, 170, 172, 180, 189, 199, 201, 204, 210, 213, 216, 219, 222, 225, 228, 233, 235, 238, 240, 243, 247, 253, 259, 265, 272, 283, 293, 295, 305, 313, 317, 321, 326, 330, 341, 354, 363, 376, 387, 398, 409, 420, 434, 448, 464, 477, 489, 503, 509, 512, 515, 518, 521, 526, 532, 538, 545, 549, 553, 561, 573, 582, 594, 613, 623}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
