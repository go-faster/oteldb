// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Invalid-0]
	_ = x[EOF-1]
	_ = x[Ident-2]
	_ = x[String-3]
	_ = x[Number-4]
	_ = x[Duration-5]
	_ = x[Bytes-6]
	_ = x[Comma-7]
	_ = x[Dot-8]
	_ = x[OpenBrace-9]
	_ = x[CloseBrace-10]
	_ = x[Eq-11]
	_ = x[NotEq-12]
	_ = x[Re-13]
	_ = x[NotRe-14]
	_ = x[PipeExact-15]
	_ = x[PipeMatch-16]
	_ = x[PipePattern-17]
	_ = x[NotPipePattern-18]
	_ = x[Pipe-19]
	_ = x[Unwrap-20]
	_ = x[OpenParen-21]
	_ = x[CloseParen-22]
	_ = x[By-23]
	_ = x[Without-24]
	_ = x[Bool-25]
	_ = x[OpenBracket-26]
	_ = x[CloseBracket-27]
	_ = x[Offset-28]
	_ = x[On-29]
	_ = x[Ignoring-30]
	_ = x[GroupLeft-31]
	_ = x[GroupRight-32]
	_ = x[Or-33]
	_ = x[And-34]
	_ = x[Unless-35]
	_ = x[Add-36]
	_ = x[Sub-37]
	_ = x[Mul-38]
	_ = x[Div-39]
	_ = x[Mod-40]
	_ = x[Pow-41]
	_ = x[CmpEq-42]
	_ = x[Gt-43]
	_ = x[Gte-44]
	_ = x[Lt-45]
	_ = x[Lte-46]
	_ = x[JSON-47]
	_ = x[Regexp-48]
	_ = x[Logfmt-49]
	_ = x[Unpack-50]
	_ = x[Pattern-51]
	_ = x[LabelFormat-52]
	_ = x[LineFormat-53]
	_ = x[IP-54]
	_ = x[Decolorize-55]
	_ = x[Distinct-56]
	_ = x[Drop-57]
	_ = x[Keep-58]
	_ = x[Range-59]
	_ = x[Rate-60]
	_ = x[RateCounter-61]
	_ = x[CountOverTime-62]
	_ = x[BytesRate-63]
	_ = x[BytesOverTime-64]
	_ = x[AvgOverTime-65]
	_ = x[SumOverTime-66]
	_ = x[MinOverTime-67]
	_ = x[MaxOverTime-68]
	_ = x[StdvarOverTime-69]
	_ = x[StddevOverTime-70]
	_ = x[QuantileOverTime-71]
	_ = x[FirstOverTime-72]
	_ = x[LastOverTime-73]
	_ = x[AbsentOverTime-74]
	_ = x[Vector-75]
	_ = x[Sum-76]
	_ = x[Avg-77]
	_ = x[Max-78]
	_ = x[Min-79]
	_ = x[Count-80]
	_ = x[Stddev-81]
	_ = x[Stdvar-82]
	_ = x[Bottomk-83]
	_ = x[Topk-84]
	_ = x[Sort-85]
	_ = x[SortDesc-86]
	_ = x[LabelReplace-87]
	_ = x[BytesConv-88]
	_ = x[DurationConv-89]
	_ = x[DurationSecondsConv-90]
	_ = x[ParserFlag-91]
	_ = x[Explain-92]
}

const _TokenType_name = "InvalidEOFIdentStringNumberDurationBytesCommaDotOpenBraceCloseBraceEqNotEqReNotRePipeExactPipeMatchPipePatternNotPipePatternPipeUnwrapOpenParenCloseParenByWithoutBoolOpenBracketCloseBracketOffsetOnIgnoringGroupLeftGroupRightOrAndUnlessAddSubMulDivModPowCmpEqGtGteLtLteJSONRegexpLogfmtUnpackPatternLabelFormatLineFormatIPDecolorizeDistinctDropKeepRangeRateRateCounterCountOverTimeBytesRateBytesOverTimeAvgOverTimeSumOverTimeMinOverTimeMaxOverTimeStdvarOverTimeStddevOverTimeQuantileOverTimeFirstOverTimeLastOverTimeAbsentOverTimeVectorSumAvgMaxMinCountStddevStdvarBottomkTopkSortSortDescLabelReplaceBytesConvDurationConvDurationSecondsConvParserFlagExplain"

var _TokenType_index = [...]uint16{0, 7, 10, 15, 21, 27, 35, 40, 45, 48, 57, 67, 69, 74, 76, 81, 90, 99, 110, 124, 128, 134, 143, 153, 155, 162, 166, 177, 189, 195, 197, 205, 214, 224, 226, 229, 235, 238, 241, 244, 247, 250, 253, 258, 260, 263, 265, 268, 272, 278, 284, 290, 297, 308, 318, 320, 330, 338, 342, 346, 351, 355, 366, 379, 388, 401, 412, 423, 434, 445, 459, 473, 489, 502, 514, 528, 534, 537, 540, 543, 546, 551, 557, 563, 570, 574, 578, 586, 598, 607, 619, 638, 648, 655}

func (i TokenType) String() string {
	idx := int(i) - 0
	if i < 0 || idx >= len(_TokenType_index)-1 {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[idx]:_TokenType_index[idx+1]]
}
