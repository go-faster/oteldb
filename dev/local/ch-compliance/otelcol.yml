receivers:
  otlp:
    protocols:
      grpc:
      http:
  prometheus/compliance:
    config:
      scrape_configs:
        # For PromQL compliance tester
        # https://github.com/prometheus/compliance/tree/main/promql#promql-compliance-tester
        - job_name: 'demo'
          scrape_interval: 1s
          static_configs:
            - targets:
                - 'demo-1:8080'
                - 'demo-2:8080'
                - 'demo-3:8080'

exporters:
  otlp:
    endpoint: oteldb:4317
    tls:
      insecure: true
  prometheusremotewrite:
    endpoint: "http://prometheus:9090/api/v1/write"
    resource_to_telemetry_conversion:
      enabled: true

processors:
  # normalize between prometheus and otel
  resource/normalize:
    attributes:
      - key: instance
        from_attribute: service.instance.id
        action: insert
      - key: job
        from_attribute: service.name
        action: insert

extensions:
  health_check:
  zpages:

service:
  extensions: [zpages, health_check]
  pipelines:
    traces:
      receivers: [otlp]
      exporters: [otlp]
    metrics:
      receivers: [otlp, prometheus/compliance]
      processors: [resource/normalize]
      exporters: [otlp, prometheusremotewrite]
    logs:
      receivers: [otlp]
      exporters: [otlp]

  # https://github.com/open-telemetry/opentelemetry-collector/blob/main/docs/observability.md#how-we-expose-telemetry
  telemetry:
    metrics:
      readers:
        - periodic:
            interval: 5000
            exporter:
              otlp:
                protocol: grpc/protobuf
                endpoint: http://localhost:4317
    traces:
      processors:
        - batch:
            exporter:
              otlp:
                protocol: grpc/protobuf
                endpoint: http://localhost:4317
