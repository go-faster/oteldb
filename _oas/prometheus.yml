openapi: 3.0.3
info:
  title: Prometheus API
  version: 2.44.0
externalDocs:
  description: Prometheus documentation
  url: https://prometheus.io/docs/prometheus/latest/querying/api/
servers:
  - url: "http://localhost:3200"
paths:
  /api/v1/query:
    description: Instant queries
    get:
      operationId: getQuery
      description: Query Prometheus
      parameters:
        - in: query
          required: true
          name: query
          schema:
            type: string
        - in: query
          required: false
          name: time
          description: Evaluation timestamp
          schema:
            type: string
            description: rfc3339 or unix timestamp
      responses:
        default:
          $ref: '#/components/responses/Error'
        200:
          description: Query response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
    post:
      operationId: postQuery
      description: Query Prometheus
      responses:
        default:
          $ref: '#/components/responses/Error'
        200:
          description: Query response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
components:
  responses:
    Error:
      description: Error while processing request
      content:
        "application/json":
          schema:
            $ref: "#/components/schemas/Fail"
  schemas:
    Scalar:
      type: object
      required: [resultType, result]
      properties:
        resultType:
          type: string
        result:
          $ref: '#/components/schemas/Value'
    String:
      type: object
      required: [resultType, result]
      properties:
        resultType:
          type: string
        result:
          type: string
    Vector:
      type: object
      required: [resultType, result]
      properties:
        resultType:
          type: string
        result:
          type: array
          items:
            type: object
            required: [metric, value]
            properties:
              metric:
                type: object
                additionalProperties:
                  type: string
              value:
                $ref: '#/components/schemas/Value'
    Matrix:
      type: object
      required: [resultType, result]
      properties:
        resultType:
          type: string
        result:
          type: array
          items:
            type: object
            required: [metric, value]
            properties:
              metric:
                type: object
                additionalProperties:
                  type: string
              values:
                type: array
                items:
                  $ref: '#/components/schemas/Value'
    Data:
      discriminator:
        propertyName: resultType
        mapping:
          matrix: Matrix
          vector: Vector
          scalar: Scalar
          string: String
      oneOf:
        - $ref: '#/components/schemas/Matrix'
        - $ref: '#/components/schemas/Vector'
        - $ref: '#/components/schemas/Scalar'
        - $ref: '#/components/schemas/String'
    Value:
      type: array
      items:
        oneOf:
          - type: number
          - type: string
      minItems: 2
      maxItems: 2
      description: >-
        The first item in the array MUST be an integer,
        and the second item MUST be a string.
    Fail:
      type: object
      required: [status, error, errorType]
      description: 'May still contain data'
      properties:
        status:
          type: string
          default: 'error'
        error:
          type: string
        errorType:
          type: string
          enum:
            - 'timeout'
            - 'canceled'
            - 'execution'
            - 'bad_data'
            - 'internal'
            - 'unavailable'
            - 'not_found'
        data:
          $ref: '#/components/schemas/Data'
    Success:
      type: object
      required: [status, data]
      properties:
        status:
          type: string
          default: 'success'
          description: Always 'success'
        warnings:
          description: >-
            Only if there were warnings while executing the request.
            There will still be data in the data field.
          type: array
          items:
            type: string
        data:
          $ref: '#/components/schemas/Data'
